---
source: tests/integration/install.rs
expression: result
---
ServerPackages:
  OneDependency.lua: "return require(script.Parent._Index[\"biff_path-sub-dependency@0.1.0\"][\"path-sub-dependency\"])\n"
  _Index:
    biff_path-sub-dependency@0.1.0:
      path-sub-dependency:
        default.project.json: "{\n  \"name\": \"path-sub-dependency\",\n  \"tree\": {\n    \"$path\": \"../../../../path-sub-dependency\"\n  }\n}"
default.project.json: "{\n\t\"name\": \"dev-dependency\",\n\t\"tree\": {\n\t\t\"$path\": \"src\"\n\t}\n}"
path-sub-dependency:
  default.project.json: "{\n\t\"name\": \"path-sub-dependency\",\n\t\"tree\": {\n\t\t\"$path\": \"src\"\n\t}\n}"
  src:
    init.lua: "return \"Hell world from down-under!\""
  wally.toml: "[package]\nname = \"biff/path-sub-dependency\"\nversion = \"0.1.0\"\nlicense = \"MIT\"\nrealm = \"server\"\nregistry = \"test-registries/primary-registry\"\n"
src:
  init.lua: "local OneDependency = require(script.Parent.OneDependency)\n\nOneDependency()\n\nreturn true"
wally.lock: "# This file is automatically @generated by Wally.\n# It is not intended for manual editing.\nregistry = \"test\"\n\n[[package]]\npath = \"./path-sub-dependency\"\ndependencies = []\n\n[[package]]\nname = \"biff/with-path-dependency\"\nversion = \"0.1.0\"\ndependencies = []\n"
wally.toml: "[package]\nname = \"biff/with-path-dependency\"\nversion = \"0.1.0\"\nlicense = \"MIT\"\nrealm = \"server\"\nregistry = \"test-registries/primary-registry\"\n\n[server-dependencies]\nOneDependency = \"./path-sub-dependency\"\n"

