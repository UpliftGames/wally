on:
  workflow_call:
    inputs:
      upload_url:
        required: true
        type: string

      release_ref:
        required: true
        type: string

jobs:
  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: Swatinem/rust-cache@v2

    - name: Build release binary
      run: cargo build --verbose --locked --release

    - name: Create Release Archive
      shell: bash
      run: |
        mkdir staging
        cp "target/release/wally.exe" staging/
        cd staging
        7z a ../release.zip *

    - name: Upload Archive to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ inputs.upload_url }}
        asset_path: release.zip
        asset_name: wally-${{ inputs.release_ref }}-win64.zip
        asset_content_type: application/octet-stream

  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - uses: Swatinem/rust-cache@v2

    - name: Build release binary
      run: |
        source $HOME/.cargo/env
        cargo build --verbose --locked --release
      env:
        OPENSSL_STATIC: 1

    - name: Create Release Archive
      shell: bash
      run: |
        mkdir staging
        cp "target/release/wally" staging/
        cd staging
        zip ../release.zip *

    - name: Upload Archive to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ inputs.upload_url }}
        asset_path: release.zip
        asset_name: wally-${{ inputs.release_ref }}-macos.zip
        asset_content_type: application/octet-stream

  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --locked --verbose --release
      env:
        OPENSSL_STATIC: 1

    - name: Create Release Archive
      shell: bash
      run: |
        mkdir staging
        cp "target/release/wally" staging/
        cd staging
        zip ../release.zip *

    - name: Upload Archive to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ inputs.upload_url }}
        asset_path: release.zip
        asset_name: wally-${{ inputs.release_ref }}-linux.zip
        asset_content_type: application/octet-stream